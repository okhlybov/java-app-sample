plugins {
    id 'buildlogic.javafx-common-conventions'
    id 'org.beryx.jlink'
}

dependencies {
    implementation project(':app-cli')
    implementation project(':app-javafx')
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    customImage {
        appModules = ['app.cli', 'app.javafx'] // Have to set this explicitly due to https://github.com/beryx/badass-jlink-plugin/issues/290
    }
    launcher {
        name = 'app'
        noConsole = false // For CLI app
        mainClass = 'app.cli.Main'
        moduleName = 'app.cli'
    }
    secondaryLauncher {
        name = 'appfx'
        noConsole = true // For GUI app
        winConsole = false // Override jpackage's --win-console behavior for a GUI app
        mainClass = 'app.javafx.Main'
        moduleName = 'app.javafx'
        jvmArgs = ['-Xmx256m']
    }
    jpackage {
        if(org.gradle.internal.os.OperatingSystem.current().windows) {
            imageOptions = ['--win-console'] // Set default console option for primary launcher, which is a console app on Windows
            installerType = 'msi'
            installerOptions = ['--type', 'msi', '--app-version', project.version, '--win-menu']
        }
    }
}

// Workaround for stray files slipping into the image
// This was supposed to be fixed in the org.beryx.jlink plugin, yet it seems to persist
// See https://github.com/beryx/badass-jlink-plugin/issues/51

task sanitizeImage(type: Delete) {
    delete "$buildDir/image" // The stem should match the app name
}

tasks.named('jlink') {
    finalizedBy('sanitizeImage')
}